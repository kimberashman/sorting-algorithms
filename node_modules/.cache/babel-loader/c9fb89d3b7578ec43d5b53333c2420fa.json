{"ast":null,"code":"import _slicedToArray from\"/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{getBubbleSortAnimations,getMergeSortAnimations,getQuickSortAnimations,getHeapSortAnimations}from'../sortingAlgorithms/sortingAlgorithms.js';import'./SortingVisualizer.css';// Change this value for the speed of the animations.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ANIMATION_SPEED_MS=10;// Change this value for the number of bars (value) in the array.\nvar NUMBER_OF_ARRAY_BARS=50;var SortingVisualizer=/*#__PURE__*/function(_React$Component){_inherits(SortingVisualizer,_React$Component);var _super=_createSuper(SortingVisualizer);function SortingVisualizer(props){var _this;_classCallCheck(this,SortingVisualizer);_this=_super.call(this,props);_this.state={array:[]};return _this;}_createClass(SortingVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){this.resetArray();}},{key:\"resetArray\",value:function resetArray(){var array=[];for(var i=0;i<NUMBER_OF_ARRAY_BARS;i++){array.push(randomIntFromInterval(5,255));}this.setState({array:array});}},{key:\"mergeSort\",value:function mergeSort(){var animations=getMergeSortAnimations(this.state.array);var _loop=function _loop(i){var arrayBars=document.getElementsByClassName('array-bar');var isColorChange=i%3!==2;if(isColorChange){var _animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];var barOneStyle=arrayBars[barOneIdx].style;var barTwoStyle=arrayBars[barTwoIdx].style;}else{setTimeout(function(){var _animations$i2=_slicedToArray(animations[i],2),barOneIdx=_animations$i2[0],newHeight=_animations$i2[1];var barOneStyle=arrayBars[barOneIdx].style;barOneStyle.height=\"\".concat(newHeight,\"px\");barOneStyle.backgroundColor=calcColor(0,255,\"\".concat(newHeight));},i*ANIMATION_SPEED_MS);}};for(var i=0;i<animations.length;i++){_loop(i);}}},{key:\"quickSort\",value:function quickSort(){var animations=getQuickSortAnimations(this.state.array);var _loop2=function _loop2(i){var arrayBars=document.getElementsByClassName('array-bar');var _animations$i3=_slicedToArray(animations[i],3),barOne=_animations$i3[0],barTwo=_animations$i3[1],change=_animations$i3[2];if(!change){var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;}else{setTimeout(function(){var barOneStyle=arrayBars[barOne].style;barOneStyle.height=\"\".concat(barTwo,\"px\");barOneStyle.backgroundColor=calcColor(0,255,\"\".concat(barTwo));},i*ANIMATION_SPEED_MS);}};for(var i=0;i<animations.length;i++){_loop2(i);}}},{key:\"heapSort\",value:function heapSort(){var animations=getHeapSortAnimations(this.state.array);var _loop3=function _loop3(i){var arrayBars=document.getElementsByClassName('array-bar');var _animations$i4=_slicedToArray(animations[i],3),barOne=_animations$i4[0],barTwo=_animations$i4[1],change=_animations$i4[2];if(!change){var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;}else{setTimeout(function(){var barOneStyle=arrayBars[barOne].style;barOneStyle.height=\"\".concat(barTwo,\"px\");barOneStyle.backgroundColor=calcColor(0,255,\"\".concat(barTwo));},i*ANIMATION_SPEED_MS);}};for(var i=0;i<animations.length;i++){_loop3(i);}}},{key:\"bubbleSort\",value:function bubbleSort(){var animations=getBubbleSortAnimations(this.state.array);var _loop4=function _loop4(i){var arrayBars=document.getElementsByClassName('array-bar');var _animations$i5=_slicedToArray(animations[i],3),barOne=_animations$i5[0],barTwo=_animations$i5[1],change=_animations$i5[2];if(!change){var barOneStyle=arrayBars[barOne].style;var barTwoStyle=arrayBars[barTwo].style;}else{setTimeout(function(){var barOneStyle=arrayBars[barOne].style;barOneStyle.height=\"\".concat(barTwo,\"px\");barOneStyle.backgroundColor=calcColor(0,255,\"\".concat(barTwo));},i*ANIMATION_SPEED_MS);}};for(var i=0;i<animations.length;i++){_loop4(i);}}// NOTE: This method will only work if your sorting algorithms actually return\n// the sorted arrays; if they return the animations (as they currently do), then\n// this method will be broken.\n},{key:\"testSortingAlgorithms\",value:function testSortingAlgorithms(){for(var i=0;i<100;i++){var array=[];var length=randomIntFromInterval(1,1000);for(var _i=0;_i<length;_i++){array.push(randomIntFromInterval(-1000,1000));}var javaScriptSortedArray=array.slice().sort(function(a,b){return a-b;});var mergeSortedArray=getMergeSortAnimations(array.slice());console.log(arraysAreEqual(javaScriptSortedArray,mergeSortedArray));}}},{key:\"render\",value:function render(){var _this2=this;var array=this.state.array;return/*#__PURE__*/_jsxs(\"div\",{className:\"array-container\",children:[array.map(function(value,idx){return/*#__PURE__*/_jsx(\"div\",{className:\"array-bar\",style:{// backgroundColor: PRIMARY_COLOR,\nbackgroundColor:calcColor(0,255,\"\".concat(value)),height:\"\".concat(value,\"px\")}},idx);}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.resetArray();},children:\"Generate New Array\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.mergeSort();},children:\"Merge Sort\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.quickSort();},children:\"Quick Sort\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.heapSort();},children:\"Heap Sort\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.bubbleSort();},children:\"Bubble Sort\"})]});}}]);return SortingVisualizer;}(React.Component);// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nexport{SortingVisualizer as default};function randomIntFromInterval(min,max){// min and max included\nreturn Math.floor(Math.random()*(max-min+1)+min);}// From https://stackoverflow.com/questions/36687323/generate-rainbow-colors-based-on-value\nfunction calcColor(min,max,val){var minHue=240,maxHue=0;var curPercent=(val-min)/(max-min);var colString=\"hsl(\"+(curPercent*(maxHue-minHue)+minHue)+\",100%,50%)\";return colString;}function arraysAreEqual(arrayOne,arrayTwo){if(arrayOne.length!==arrayTwo.length)return false;for(var i=0;i<arrayOne.length;i++){if(arrayOne[i]!==arrayTwo[i]){return false;}}return true;}","map":{"version":3,"sources":["/Users/kimberlyashman/Workspace/web-fun/sorting-visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getBubbleSortAnimations","getMergeSortAnimations","getQuickSortAnimations","getHeapSortAnimations","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","SortingVisualizer","props","state","array","resetArray","i","push","randomIntFromInterval","setState","animations","arrayBars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","newHeight","height","backgroundColor","calcColor","length","barOne","barTwo","change","javaScriptSortedArray","slice","sort","a","b","mergeSortedArray","console","log","arraysAreEqual","map","value","idx","mergeSort","quickSort","heapSort","bubbleSort","Component","min","max","Math","floor","random","val","minHue","maxHue","curPercent","colString","arrayOne","arrayTwo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getBubbleSortAnimations, getMergeSortAnimations, getQuickSortAnimations, getHeapSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './SortingVisualizer.css';\n\n// Change this value for the speed of the animations.\nconst ANIMATION_SPEED_MS = 10;\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 50;\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray() {\n        const array = [];\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n            array.push(randomIntFromInterval(5, 255));\n        }\n        this.setState({array});\n    }\n\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            const isColorChange = i % 3 !== 2;\n            if (isColorChange) {\n                const [barOneIdx, barTwoIdx] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n            } else {\n                setTimeout(() => {\n                    const [barOneIdx, newHeight] = animations[i];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    barOneStyle.height = `${newHeight}px`;\n                    barOneStyle.backgroundColor = calcColor(0,255,`${newHeight}`);\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    quickSort() {\n        const animations = getQuickSortAnimations(this.state.array);\n        for(let i = 0; i < animations.length; i ++)\n        {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            let [barOne, barTwo, change] = animations[i];\n            if(!change)\n            {\n                const barOneStyle = arrayBars[barOne].style;\n                const barTwoStyle = arrayBars[barTwo].style;\n            } else {\n                setTimeout(() => {\n                    const barOneStyle = arrayBars[barOne].style;\n                    barOneStyle.height = `${barTwo}px`;\n                    barOneStyle.backgroundColor = calcColor(0,255,`${barTwo}`);\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    heapSort() {\n        const animations = getHeapSortAnimations(this.state.array);\n        for(let i = 0; i < animations.length; i ++)\n        {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            let [barOne, barTwo, change] = animations[i];\n            if(!change)\n            {\n                const barOneStyle = arrayBars[barOne].style;\n                const barTwoStyle = arrayBars[barTwo].style;\n            } else {\n                setTimeout(() => {\n                    const barOneStyle = arrayBars[barOne].style;\n                    barOneStyle.height = `${barTwo}px`;\n                    barOneStyle.backgroundColor = calcColor(0,255,`${barTwo}`);\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    bubbleSort() {\n        const animations = getBubbleSortAnimations(this.state.array);\n        for(let i = 0; i < animations.length; i ++)\n        {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            let [barOne, barTwo, change] = animations[i];\n            if(!change)\n            {\n                const barOneStyle = arrayBars[barOne].style;\n                const barTwoStyle = arrayBars[barTwo].style;\n            } else {\n                setTimeout(() => {\n                    const barOneStyle = arrayBars[barOne].style;\n                    barOneStyle.height = `${barTwo}px`;\n                    barOneStyle.backgroundColor = calcColor(0,255,`${barTwo}`);\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    // NOTE: This method will only work if your sorting algorithms actually return\n    // the sorted arrays; if they return the animations (as they currently do), then\n    // this method will be broken.\n    testSortingAlgorithms() {\n        for (let i = 0; i < 100; i++) {\n            const array = [];\n            const length = randomIntFromInterval(1, 1000);\n            for (let i = 0; i < length; i++) {\n                array.push(randomIntFromInterval(-1000, 1000));\n            }\n            const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n            const mergeSortedArray = getMergeSortAnimations(array.slice());\n            console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\n        }\n    }\n\n    render() {\n        const {array} = this.state;\n\n        return (\n            <div className=\"array-container\">\n                {array.map((value, idx) => (\n                    <div\n                        className=\"array-bar\"\n                        key={idx}\n                        style={{\n                            // backgroundColor: PRIMARY_COLOR,\n                            backgroundColor: calcColor(0,255,`${value}`),\n                            height: `${value}px`,\n                        }}></div>\n                ))}\n                <button onClick={() => this.resetArray()}>Generate New Array</button>\n                <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                <button onClick={() => this.quickSort()}>Quick Sort</button>\n                <button onClick={() => this.heapSort()}>Heap Sort</button>\n                <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n\n            </div>\n        );\n    }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// From https://stackoverflow.com/questions/36687323/generate-rainbow-colors-based-on-value\nfunction calcColor(min, max, val)\n{\n    var minHue = 240, maxHue=0;\n    var curPercent = (val - min) / (max-min);\n    var colString = \"hsl(\" + ((curPercent * (maxHue-minHue) ) + minHue) + \",100%,50%)\";\n    return colString;\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n    if (arrayOne.length !== arrayTwo.length) return false;\n    for (let i = 0; i < arrayOne.length; i++) {\n        if (arrayOne[i] !== arrayTwo[i]) {\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}